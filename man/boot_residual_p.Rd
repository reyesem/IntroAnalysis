% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boot_residual_p.R
\name{boot_residual_p}
\alias{boot_residual_p}
\title{Compare nested linear models via (wild) residual bootstrap.}
\usage{
boot_residual_p(fit1, fit0, reps, wild, construct)
}
\arguments{
\item{fit1}{\code{lm} object defining the full model.}

\item{fit0}{\code{lm} object defining the reduced model.}

\item{reps}{scalar; number of bootstrap replications to perform.}

\item{wild}{boolean; if \code{TRUE}, a wild bootstrap is performed. If
\code{FALSE} a traditional residual bootstrap is performed.}

\item{construct}{string defining the type of construct to use when generating
from the distribution for the wild bootrap (see \code{\link{rmammen}}). If
\code{wild = FALSE}, this is ignored.}
}
\value{
vector of length \code{reps} containing the test statistic from each
bootstrap replication.
}
\description{
This is the workhorse for the \code{compare_models()} function.
Given two linear models, one nested within the other, the null distribution
of the test statistic comparing the two models is estimated via a
residual bootstrap (or wild bootstrap). This is not meant to be called by
the user directly.
}
\examples{
\dontrun{
test.df <- data.frame(x = seq(10), y = seq(10) + rnorm(10))
fit1 <- lm(y ~ x, data = test.df)
fit0 <- lm(y ~ 1, data = test.df)
boot_residual_p(fit1, fit0, reps = 4999, wild = FALSE)
}

}
