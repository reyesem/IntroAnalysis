% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_parameters.R
\name{estimate_parameters}
\alias{estimate_parameters}
\title{Estimate the parameters of a linear model with specified confidence.}
\usage{
estimate_parameters(fit, conf.level = 0.95, assume.constant.variance = TRUE,
  assume.normality = TRUE, bootstrap.reps = 4999, construct = "normal-2",
  type = c("percentile", "BC", "bootstrap-t"))
}
\arguments{
\item{fit}{\code{lm} model fit defining the linear model and the parameters.}

\item{conf.level}{scalar between 0 and 1 indicating the confidence level
(default = 0.95).}

\item{assume.constant.variance}{boolean; if \code{TRUE} (default),
homoskedasticity is assumed for the error term. If \code{FALSE}, this is not
assumed.}

\item{assume.normality}{boolean; if \code{TRUE} (default), the errors are
assumed to follow a Normal distribution. If \code{FALSE}, this is not
assumed. This is ignored if \code{assume.constant.variance = FALSE}.}

\item{bootstrap.reps}{scalar indicating the number of bootstrap replications
to use (default = 4999).  This is ignored if both
\code{assume.constant.variance = TRUE} and
\code{assume.normality = TRUE}.}

\item{construct}{string defining the type of construct to use when generating
from the distribution for the wild bootrap (see \code{\link{rmammen}}). If
\code{assume.constant.variance = TRUE}, this is ignored
(default = \code{"normal-2"}).}

\item{type}{string defining the type of confidence interval to construct. If
\code{"percentile"} (default) an equal-tailed percentile interval is
constructed. If \code{"BC"} the bias-corrected percentile interval is
constructed. If \code{"bootstrap-t"} the bootstrap-t interval is constructed.}
}
\value{
data.frame containing a table of parameter estimates. The object
has an additional attribute "Sampling Distribution" which is a matrix with
\code{bootstrap.reps} rows and the same number of columns as parameters in
\code{fit}.  Each column contains a sample from the corresponding model of
the sampling distribution. This is useful for plotting the distribution for
pedagogical purposes.
}
\description{
Provides point estimates and confidence intervals for the parameters of a
linear model.
}
\details{
This wrapper provides a single interface for estimating parameters under
various conditions imposed on the error term in the linear model.  A
table of estimates, similar to \code{\link[stats]{summary.lm}} containing
point and interval estimates of the parameters.  However, the interval
estimates can differ depending on the conditions imposed on the error term.
The classical approach implmented by \code{\link[stats]{summary.lm}} can
be recovered as well as having the interval estimates computed based on a
residual or wild bootstrap. The following approaches are implemented.
\itemize{
\item classical: if both homoskedasticity and normality are assumed, the
sampling distribution of each estimate is modeled by an t-distribution.
\item White-Huber correction: if normality can be assumed but
homoskedasticity cannot, the variance-covariance matrix is replaced by the
White-Huber consistent variance-covariance estimate when computing the
standard errors, and the sampling distribution is modeled by a
t-distribution.
\item residual bootstrap: if homoskedasticity can be assumed, but normality
cannot, a residual bootstrap is used to compute the confidence intervals.
\item wild bootstrap: if neither homoskedasticity nor normality is assumed,
a wild bootstrap is used to compute the confidence intervals.}
We do not implement methods which assume normality but not homoskedasticity.
Further, all methods make additional requirements regarding independence of
the error terms and that the model has been correctly specified. The work is
done primarily by the workhorse function \code{\link{boot_residual_ci}}.
The percentile interval is constructed by taking the empirical
\eqn{100\alpha} and \eqn{100(1-\alpha)} percentiles from the bootstrap
values. If \eqn{\hat{F}} is the empirical distribution function of the
bootstrap values, then the \eqn{100(1 - 2\alpha)}% percentile interval is
given by
\deqn{(\hat{F}^{-1}(\alpha), \hat{F}^{-1}(1-\alpha))}
The bias-corrected (BC) interval corrects for median-bias.  It is given by
\deqn{(\hat{F}^{-1}(\alpha_1), \hat{F}^{-1}(1-\alpha_2))}
where
\deqn{\alpha_1 = \Phi{2\hat{z}_0 + \Phi^{-1}(\alpha)}}
\deqn{\alpha_2 = 1 - \Phi{2\hat{z}_0 + \Phi^{-1}(1-\alpha)}}
\deqn{\hat{z}_0 = \Phi^{-1}(\hat{F}(\hat{\beta}))}
where \eqn{\hat{\beta}} is the estimate from the original sample.
The bootstrap-t interval is based on the bootstrap distribution of
\deqn{t^{b} = \frac{\hat{\beta}^{b} -
\hat{\beta}}{\hat{\sigma}^{b}}}
where \eqn{\hat{\sigma}} is the estimate of the standard error of
\eqn{\hat{\beta}} and the superscript b denotes a bootstrap sample. Let
\eqn{\hat{G}} be the empirical distribution function of the bootstrap
standardized statistics given above.  Then, the bootstrap-t interval is given
by
\deqn{(\hat{\beta} - \hat{\sigma}\hat{G}^{-1}(1-\alpha),
\hat{\beta} - \hat{\sigma}\hat{G}^{-1}\alpha)}
}
\examples{
test.df <- data.frame(x = seq(10), y = seq(10) + rnorm(10))
fit <- lm(y ~ x, data = test.df)
estimate_parameters(fit,
assume.constant.variance = TRUE,
assume.normality = FALSE)

}
\seealso{
\code{\link[stats]{summary.lm}}, \code{\link{boot_residual_ci}}
}
