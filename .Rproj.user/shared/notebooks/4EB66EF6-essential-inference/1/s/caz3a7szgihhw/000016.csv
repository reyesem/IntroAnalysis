"0","estimate_mean_response(fit_p, "
"0","                       confidence.level = 0.95,"
"0","                       Intercept = 1)"
"1","debugging in: "
"1","estimate_mean_response.glm(fit_p, confidence.level = 0.95, Intercept = 1)
"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/estimate_mean_response.R#162: "
"1","{
"
"1","    .newdat <- expand.grid(...)
"
"1","    if (nrow(.newdat) == 0) 
"
"1","        .newdat <- model.frame(mean.model)
"
"1","    if (missing(confidence.level)) {
"
"1","        .newdat$.estimate <- predict(mean.model, newdata = .newdat, 
"
"1","            type = ""response"", se.fit = FALSE)
"
"1","        return(.newdat)
"
"1","    }
"
"1","    confidence.level <- confidence.level[1]
"
"1","    if (confidence.level <= 0) {
"
"1","        stop(""Confidence level must be positive."")
"
"1","    }
"
"1","    else if (confidence.level >= 100) {
"
"1","        stop(""Confidence level must be below 100%."")
"
"1","    }
"
"1","    else if (confidence.level >= 1) {
"
"1","        confidence.level <- confidence.level/100
"
"1","    }
"
"1","    .lowername <- paste(100 * confidence.level, ""% lower"", sep = """")
"
"1","    .uppername <- paste(100 * confidence.level, ""% upper"", sep = """")
"
"1","    if (method == ""classical"") {
"
"1","        .yhat <- predict(mean.model, newdata = .newdat, se.fit = TRUE, 
"
"1","            type = ""response"")
"
"1","        .newdat$.estimate <- .yhat$fit
"
"1","        .newdat$.standard.error <- .yhat$se.fit
"
"1","        .newdat$.lwr <- .yhat$fit - qnorm((1 + confidence.level)/2) * 
"
"1","            .yhat$se.fit
"
"1","        .newdat$.upr <- .yhat$fit + qnorm((1 + confidence.level)/2) * 
"
"1","            .yhat$se.fit
"
"1","        .boot <- matrix(rnorm(bootstrap.replications), nrow = nrow(.newdat), 
"
"1","            ncol = bootstrap.replications, byrow = TRUE)
"
"1","        .boot <- .boot * .newdat$.standard.error + .newdat$.estimate
"
"1","    }
"
"1","    else if (method == ""parametric"") {
"
"1","        .boot <- bootstrap_parametric_predict(mean.model, newdata = .newdat, 
"
"1","            reps = bootstrap.replications)
"
"1","        .newdat$.standard.error <- apply(.boot, 1, sd)
"
"1","        .ci <- bootstrap_compute_ci(.boot, level = confidence.level, 
"
"1","            type = type)
"
"1","        .newdat <- cbind(.newdat, data.frame(.ci))
"
"1","    }
"
"1","    else {
"
"1","        .boot <- bootstrap_case_predict(mean.model, newdata = .newdat, 
"
"1","            reps = bootstrap.replications)
"
"1","        .newdat$.standard.error <- apply(.boot, 1, sd)
"
"1","        .ci <- bootstrap_compute_ci(.boot, level = confidence.level, 
"
"1","            type = type)
"
"1","        .newdat <- cbind(.newdat, data.frame(.ci))
"
"1","    }
"
"1","    colnames(.newdat)[ncol(.newdat) - c(1, 0)] <- c(.lowername, 
"
"1","        .uppername)
"
"1","    rownames(.newdat) <- NULL
"
"1","    attributes(.boot) <- list(dim = c(nrow(.newdat), bootstrap.replications))
"
"1","    attr(.newdat, ""Sampling Distribution"") <- t(.boot)
"
"1","    .newdat
"
"1","}
"
"0","c"
"2","the condition has length > 1 and only the first element will be used"
"1","exiting from: "
"1","estimate_mean_response.glm(fit_p, confidence.level = 0.95, Intercept = 1)
"
