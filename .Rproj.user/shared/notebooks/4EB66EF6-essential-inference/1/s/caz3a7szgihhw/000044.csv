"0","# estimate_mean_response(fit_p, "
"0","#                        confidence.level = 0.95,"
"0","#                        Intercept = 1)"
"0","estimate_mean_response(f0,"
"0","                       confidence.level = 0.95,"
"0","                       Intercept = 1,"
"0","                       method = ""case"","
"0","                       bootstrap.replications = 20)"
"1","debugging in: "
"1","bootstrap_case_predict(mean.model, newdata = .newdat, reps = bootstrap.replications)
"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/bootstrap_glm.R#168: "
"1","{
"
"1","    .origdat <- get_all_vars(fit$formula, data = fit$data)
"
"1","    if (!is.null(.na.action <- fit$na.action)) {
"
"1","        .origdata <- do.call(paste0(""na."", class(.na.action)), 
"
"1","            list(object = .origdata))
"
"1","    }
"
"1","    .n <- nrow(.origdat)
"
"1","    .boot <- matrix(sample(seq(.n), size = .n * reps, replace = TRUE), 
"
"1","        nrow = .n, ncol = reps)
"
"1","    .refit <- function(obs, fit, newdata, origdat) {
"
"1","        origdat <- origdat[obs, ]
"
"1","        .newfit <- my_update(fit, data = origdat)
"
"1","        .yhat <- predict(.newfit, newdata = newdata, type = ""response"", 
"
"1","            se.fit = TRUE)
"
"1","        c(.yhat$fit, .yhat$se.fit)
"
"1","    }
"
"1","    .all <- apply(.boot, 2, .refit, fit = fit, newdata = newdata, 
"
"1","        origdat = .origdat)
"
"1","    .ests <- .all[1:nrow(newdata), , drop = FALSE]
"
"1","    .orig <- predict(fit, newdata = newdata, type = ""response"", 
"
"1","        se.fit = TRUE)
"
"1","    attr(.ests, ""std.err"") <- .all[-c(1:nrow(newdata)), , drop = FALSE]
"
"1","    attr(.ests, ""original.estimates"") <- .orig$fit
"
"1","    attr(.ests, ""original.std.err"") <- .orig$se.fit
"
"1","    .ests
"
"1","}
"
"0","# construct original data"
"0","  .origdat <- get_all_vars(fit$formula, data = fit$data)"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/bootstrap_glm.R#171: "
"1",".origdat <- get_all_vars(fit$formula, data = fit$data)
"
"0","  if (!is.null(.na.action <- fit$na.action)){"
"0","    .origdata <- do.call(paste0(""na."", class(.na.action)),"
"0","                         list(object = .origdata))"
"0","  }"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/bootstrap_glm.R#173: "
"1","if (!is.null(.na.action <- fit$na.action)) {
"
"1","    .origdata <- do.call(paste0(""na."", class(.na.action)), list(object = .origdata))
"
"1","}
"
"0","  # obtain nonparametric bootstraps"
"0","  .n <- nrow(.origdat)"
"0","  .boot <- matrix(sample(seq(.n), size = .n*reps, replace = TRUE),"
"0","                  nrow = .n, ncol = reps)"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/bootstrap_glm.R#179: "
"1",".n <- nrow(.origdat)
"
"0","  # refit model for each fit"
"0","  .refit <- function(obs, fit, newdata, origdat){"
"0","    origdat <- origdat[obs, ]"
"0","    .newfit <- my_update(fit, data = origdat)"
"0","    .yhat <- predict(.newfit, newdata = newdata, type = ""response"","
"0","                     se.fit = TRUE)"
"0","    c(.yhat$fit, .yhat$se.fit)"
"0","  }"
"0","nrow(.origdat)"
"1","[1]"
"1"," 32"
"1","
"
"0","nrow(.origdat[.boot[,1],])"
"1","NULL
"
"0",".boot[,1]"
"1"," [1]"
"1"," 16"
"1"," 17"
"1"," 30"
"1"," 15"
"1","  4"
"1"," 31"
"1"," 32"
"1"," 32"
"1"," 28"
"1"," 15"
"1"," 15"
"1"," 12"
"1"," 32"
"1"," 31"
"1","  4"
"1","  8"
"1","  1"
"1"," 24"
"1"," 19"
"1"," 27"
"1","  2"
"1","  4"
"1"," 21"
"1"," 30"
"1","  7"
"1","  2"
"1","  6"
"1"," 14"
"1","  1"
"1"," 25"
"1"," 27"
"1"," 17"
"1","
"
"0",".origdat[.boot[,1],]"
"1"," [1]"
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," manual   "
"1"," manual   "
"1"," manual   "
"1"," automatic"
"1","
"
"1","[11]"
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," manual   "
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," automatic"
"1"," manual   "
"1"," manual   "
"1","
"
"1","[21]"
"1"," manual   "
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," automatic"
"1"," manual   "
"1"," automatic"
"1"," automatic"
"1"," manual   "
"1"," automatic"
"1","
"
"1","[31]"
"1"," manual   "
"1"," automatic"
"1","
"
"1","Levels: "
"1","automatic manual"
"1","
"
"0",".origdat[.boot[,1],, drop=FALSE]"
