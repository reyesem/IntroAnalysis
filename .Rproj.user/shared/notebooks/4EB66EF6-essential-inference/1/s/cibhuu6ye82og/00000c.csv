"0","estimate_parameters(fit_p,"
"0","                    confidence.level = 0.95)"
"1","debugging in: "
"1","estimate_parameters.glm(fit_p, confidence.level = 0.95)
"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/estimate_parameters.R#151: "
"1","{
"
"1","    method <- match.arg(method)
"
"1","    type <- match.arg(type)
"
"1","    .ests <- summary(mean.model)$coefficients
"
"1","    .ests <- data.frame(term = rownames(.ests), estimate = .ests[, 
"
"1","        ""Estimate""])
"
"1","    if (missing(confidence.level)) {
"
"1","        return(.ests)
"
"1","    }
"
"1","    confidence.level <- confidence.level[1]
"
"1","    if (confidence.level <= 0) {
"
"1","        stop(""Confidence level must be positive."")
"
"1","    }
"
"1","    else if (confidence.level >= 100) {
"
"1","        stop(""Confidence level must be below 100%."")
"
"1","    }
"
"1","    else if (confidence.level >= 1) {
"
"1","        confidence.level <- confidence.level/100
"
"1","    }
"
"1","    .lowername <- paste(100 * confidence.level, ""% lower"", sep = """")
"
"1","    .uppername <- paste(100 * confidence.level, ""% upper"", sep = """")
"
"1","    if (method == ""classical"") {
"
"1","        .ests$standard.error <- summary(mean.model)$coefficients[, 
"
"1","            ""Std. Error""]
"
"1","        .ci <- confint(profile(mean.model), level = confidence.level)
"
"1","        .ests <- cbind(.ests, data.frame(.ci))
"
"1","        .boot <- matrix(rnorm(bootstrap.replications), nrow = nrow(.ests), 
"
"1","            ncol = bootstrap.replications, byrow = TRUE)
"
"1","        .boot <- .boot * .ests$standard.error + .ests$estimate
"
"1","    }
"
"1","    else if (method == ""parametric"") {
"
"1","        .boot <- bootstrap_parametric(mean.model, reps = bootstrap.replications)
"
"1","        .ests$standard.error <- apply(.boot, 1, sd)
"
"1","        .ci <- bootstrap_compute_ci(.boot, level = confidence.level, 
"
"1","            type = type)
"
"1","        .ests <- cbind(.ests, data.frame(.ci))
"
"1","    }
"
"1","    else {
"
"1","        .boot <- bootstrap_case(mean.model, reps = bootstrap.replications)
"
"1","        .ests$standard.error <- apply(.boot, 1, sd)
"
"1","        .ci <- bootstrap_compute_ci(.boot, level = confidence.level, 
"
"1","            type = type)
"
"1","        .ests <- cbind(.ests, data.frame(.ci))
"
"1","    }
"
"1","    colnames(.ests)[c(4, 5)] <- c(.lowername, .uppername)
"
"1","    rownames(.ests) <- NULL
"
"1","    attributes(.boot) <- list(dim = c(nrow(.ests), bootstrap.replications), 
"
"1","        dimnames = list(.ests$term, NULL))
"
"1","    attr(.ests, ""Sampling Distribution"") <- t(.boot)
"
"1","    .ests
"
"1","}
"
"0","method <- match.arg(method)"
"0","  type <- match.arg(type)"
"1","debug at C:/Users/Administrator/OneDrive - Rose-Hulman Institute of Technology/Github/IntroAnalysis/R/estimate_parameters.R#161: "
"1","method <- match.arg(method)
"
"0","  # construct basic frame for output"
"0","  .ests <- summary(mean.model)$coefficients"
"0","  .ests <- data.frame("
"0","    term = rownames(.ests),"
"0","    estimate = .ests[, ""Estimate""]"
"0","  )"
"0",".lowername <- paste(100*confidence.level, ""% lower"", sep = """")"
"0","  .uppername <- paste(100*confidence.level, ""% upper"", sep = """")"
"0",".ests$standard.error <- summary(mean.model)$coefficients[, ""Std. Error""]"
"0",".ests"
