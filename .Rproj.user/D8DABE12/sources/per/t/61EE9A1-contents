#' Compute summary statistics for a variable.
#'
#' Compute summary statistics, such as the mean or median, for a variable,
#' potentially within various groups.
#'
#' @param formula an object of class "\code{\link[stats]{formula}}": a symbolic
#' description identifying the response and the predictors of interest.
#' @param data an optional data frame containing the variables appearing in
#' \code{formula}.
#' @param ... a comma separated list of functions, each of which computes a
#' statistic of interest.
#' @param .args a named list of additional arguments to be added to all function
#' calls.
#'
#' @return data.frame containing the values of interest
#'
#' @examples
#' d1 <- data.frame(y = rnorm(10), grp = rep(c(0,1), each = 5))
#' summarize_variable(y ~ grp, mean, median)
#'
#' @aliases summarise_variable
#'
#' @export
summarize_variable <- function(formula,
                               data = NULL,
                               ...,
                               .args = list()){

  .mf <- model.frame.default(formula, data)
  .mf <- dplyr::group_by_at(.mf, -1)

  as.data.frame(dplyr::summarise_at(.mf, 1, dplyr::funs(..., .args = .args)))
}



#' Compute statistics summarizing a relationship between variables.
#'
#' Compute statistics, such as a correlation coefficient, summarizing the
#' relationship between two variables.
#'
#' The formula is used to specify the response, the predictor variable and
#' optionally a grouping variable which is specified in the form
#' \code{Response ~ Predictor + Group}.
#'
#' @param formula an object of class "\code{\link[stats]{formula}}": a symbolic
#' description identifying the response and the predictor of interest and
#' optionally a grouping variable.
#' @param data an optional data frame containing the variables appearing in
#' \code{formula}.
#' @param FUN a function taking at least two arguments, in which the first
#' two arguments are the two variables to be related.
#' @param ... additional parameters to pass to FUN.
#'
#' @return data.frame containing the statistics of interest
#'
#' @examples
#' d1 <- data.frame(y = rnorm(10), x = rnorm(10), grp = rep(c(0, 1), each = 5))
#' summarize_relationship(y ~ x, data = d1, cor)
#' summarize_relationship(y ~ x + g, data = d1, cor, method = "spearman")
summarize_relationship <- function(formula,
                                   data = NULL,
                                   FUN = cor,
                                   ...){
  .mf <- model.frame.default(formula, data)

  if (ncol(.mf) == 1){
    stop("Must specify both a response and predictor in formula.")
  } else if (ncol(.mf) > 3){
    warning("More than two predictors specified, only using first two.")

    .mf <- .mf[, c(1, 2, 3)]
  }

  if (ncol(.mf) == 3){
    .mf <- dplyr::group_by_at(.mf, 3)
  }

  FUN <- match.fun(FUN)

  # group data and then apply function to each group
  .mf <- tidyr::nest(.mf, .key = "statistic")

  .out <- dplyr::mutate(.mf,
                        statistic = purrr::map(statistic, function(u){
                          FUN(u[, 1], u[, 2], ...)
                        }))

  as.data.frame(tidyr::unnest(.out))
}



